name: Template Testing Result Upload

on:
  workflow_call:
    inputs:
      experimental:
        required: false
        type: boolean
        default: false
        description: 'Whether the tests are mandatory for the build to pass'

jobs:
  build-binaries:
    name: Results
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          pattern: ${{(inputs.experimental && 'experimental-') || ''}}test-results-*
          path: test-results
          merge-multiple: true

      - name: List Test Files
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Count TRX files
            let trxCount = 0;
            let firstFiles = [];
            
            function countTrxFiles(dir, depth = 0) {
              if (depth > 5) return; // Avoid infinite recursion
              
              const entries = fs.readdirSync(dir, { withFileTypes: true });
              
              for (const entry of entries) {
                const fullPath = path.join(dir, entry.name);
                
                if (entry.isDirectory()) {
                  countTrxFiles(fullPath, depth + 1);
                } else if (entry.isFile() && entry.name.endsWith('.trx')) {
                  trxCount++;
                  if (firstFiles.length < 5) {
                    firstFiles.push(entry.name);
                  }
                }
              }
            }
            
            countTrxFiles('test-results');
            
            console.log(`Found ${trxCount} TRX files`);
            if (firstFiles.length > 0) {
              console.log(`Sample files: ${firstFiles.join(', ')}`);
            }

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Test Results ${{(inputs.experimental && '(Experimental)') || ''}}
          files: "test-results/**/*.trx"
          fail_on: ${{(inputs.experimental && 'nothing') || 'test failures'}}
          check_run: ${{!inputs.experimental}}
          comment_mode: ${{(inputs.experimental && 'off') || 'always'}}
