name: Test Upload Result
description: Test Upload Result

inputs:
  os:
    description: 'The operating system to use'
    required: true
  architecture:
    description: 'The architecture to use'
    required: true
  runtime-type:
    description: 'Values: "dotnet", "mono", "fx"'
    required: true
  target_framework:
    description: 'The target framework to use'
    required: false
  build_configuration:
    description: 'The build configuration to use'
    required: true
  experimental:
    description: 'Whether the tests are mandatory for the build to pass'
    required: true

runs:
  using: "composite"
  steps:
    # Use github-script to check files before upload (platform-independent)
    - name: Check TRX Files
      id: check-files
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            if (!fs.existsSync('TestResults')) {
              console.log('TestResults directory not found');
              return { count: 0, files: [] };
            }
            
            // Helper function to find all TRX files recursively
            function findTrxFiles(dir) {
              let results = [];
              const entries = fs.readdirSync(dir, { withFileTypes: true });
              
              for (const entry of entries) {
                const fullPath = path.join(dir, entry.name);
                
                if (entry.isDirectory()) {
                  results = results.concat(findTrxFiles(fullPath));
                } else if (entry.isFile() && entry.name.endsWith('.trx')) {
                  results.push(fullPath);
                }
              }
              
              return results;
            }
            
            const trxFiles = findTrxFiles('TestResults');
            console.log(`Found ${trxFiles.length} TRX files:`);
            trxFiles.slice(0, 10).forEach(f => console.log(f));
            
            return { count: trxFiles.length, files: trxFiles.slice(0, 10) };
          } catch (error) {
            console.log(`Error checking TRX files: ${error.message}`);
            return { count: 0, files: [] };
          }

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: ${{(inputs.experimental == 'true' && 'experimental-') || ''}}test-results-${{inputs.runtime-type}}-${{inputs.os}}-${{inputs.architecture}}${{inputs.target_framework && format('-{0}', inputs.target_framework) || ''}}-${{inputs.build_configuration}}
        path: |
          TestResults/*.trx
        if-no-files-found: warn
        retention-days: 1
        compression-level: 0
