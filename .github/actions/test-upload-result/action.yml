name: Test Upload Result
description: Test Upload Result

inputs:
  os:
    description: 'The operating system to use'
    required: true
  architecture:
    description: 'The architecture to use'
    required: true
  runtime-type:
    description: 'Values: "dotnet", "mono", "fx"'
    required: true
  target_framework:
    description: 'The target framework to use'
    required: false
  build_configuration:
    description: 'The build configuration to use'
    required: true
  experimental:
    description: 'Whether the tests are mandatory for the build to pass'
    required: true
    #type: boolean # We don't have boolean types in composites https://github.com/actions/runner/issues/2238

runs:
  using: "composite"
  steps:
    - name: Check for TRX files
      id: check-trx
      run: |
        echo "Current directory: $(pwd)"
        echo "Searching for TRX files..."
        
        # First check the collection directory created by the test-execute-test action
        if [ -d "test_results_collection" ]; then
          echo "Checking test_results_collection directory:"
          COLLECTION_FILES=$(find test_results_collection -name "*.trx" -type f)
          
          if [ -n "$COLLECTION_FILES" ]; then
            echo "Found TRX files in collection directory:"
            echo "$COLLECTION_FILES"
            echo "files-found=true" >> $GITHUB_OUTPUT
            echo "trx-location=collection" >> $GITHUB_OUTPUT
            
            # Count the number of TRX files
            COUNT=$(echo "$COLLECTION_FILES" | wc -l)
            echo "Total TRX files found in collection: $COUNT"
            exit 0
          else
            echo "No TRX files found in collection directory"
          fi
        else
          echo "test_results_collection directory not found"
        fi
        
        # Find all TRX files recursively and display them if collection directory failed
        echo "Searching in current directory and subdirectories:"
        TRX_FILES=$(find . -name "*.trx" -type f)
        
        if [ -n "$TRX_FILES" ]; then
          echo "Found TRX files:"
          echo "$TRX_FILES"
          echo "files-found=true" >> $GITHUB_OUTPUT
          echo "trx-location=standard" >> $GITHUB_OUTPUT
          
          # Count the number of TRX files
          COUNT=$(echo "$TRX_FILES" | wc -l)
          echo "Total TRX files found: $COUNT"
        else
          echo "No TRX files found in $(pwd) or subdirectories"
          echo "files-found=false" >> $GITHUB_OUTPUT
          
          # Look for TestResults directory, common for .NET test output
          echo "Searching for TestResults directories:"
          TEST_RESULTS_DIRS=$(find . -type d -name "TestResults")
          
          if [ -n "$TEST_RESULTS_DIRS" ]; then
            echo "Found TestResults directories:"
            echo "$TEST_RESULTS_DIRS"
            
            echo "Checking TestResults directories for TRX files:"
            for dir in $TEST_RESULTS_DIRS; do
              echo "Checking $dir for TRX files:"
              find "$dir" -name "*.trx" -type f
            done
          else
            echo "No TestResults directories found"
          fi
          
          # List directories to help diagnose the issue
          echo "Listing top-level directories:"
          find . -maxdepth 1 -type d | sort
        fi
      shell: bash
      if: ${{success() || failure()}}
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: ${{(success() || failure()) && steps.check-trx.outputs.files-found == 'true'}}
      with:
        name: ${{(inputs.experimental == 'true' && 'experimental-') || ''}}test-results-${{inputs.runtime-type}}-${{inputs.os}}-${{inputs.architecture}}${{inputs.target_framework && format('-{0}', inputs.target_framework) || ''}}-${{inputs.build_configuration}}
        path: |
          ${{steps.check-trx.outputs.trx-location == 'collection' && 'test_results_collection/*.trx' || './**/*.trx'}}
        if-no-files-found: warn
        retention-days: 1
        compression-level: 0
